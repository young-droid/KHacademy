/* SELECT (DML 또는 DQL) : 조회
 * 
 * - 데이터를 조회(SELECT)하면 조건에 맞는 행들이 조회됨
 * -> 조회된 결과 행의 집합 == RESULT SET (결과 집합)
 * 
 * - RESULT SET은 0행 이상이 포함될 수 있다. 
 * -> 조회 조건에 맞는 행이 없을 수도 있기 때문에 0행도 포함됨
 * 
 * */

-- EMPLOYEE 테이블에서 모든 사원의 정보 조회
-- '*' : ALL, 모든, 전부
SELECT * FROM EMPLOYEE;

-- SELECT 컬럼명 FROM 테이블
-- EMPLOYEE 테이블에서 모든 사원의 이름만 조회
SELECT EMP_NAME FROM EMPLOYEE;

-- 테이블에서 모든 사원의 사번, 이름, 이메일, 급여 조회
SELECT EMP_ID, EMP_NAME, EMAIL, SALARY FROM EMPLOYEE;

-- DEPARTMENT 테이블에 있는 모든 행 조회
SELECT * FROM DEPARTMENT; 


----------------------------------------------------------------

-- <컬럼 값 산술 연산>
-- 컬럼 값 : 테이블의 한 칸(== 한 셀)에 적용된 값(data)

-- SELECT문 작성 시 컬럼명에 산술 연산을 작성하면
-- 조회되는 결과 컬럼 값에 산술 연산이 반영된다. 

-- EMPLOYEE 테이블에서 모든 사원의 사번, 이름, 급여, 급여 + 100만을 조회
SELECT EMP_ID, EMP_NAME, SALARY, SALARY + 1000000 SALARY_SUM
FROM EMPLOYEE;

SELECT EMP_NAME NAME, SALARY, SALARY*12 SALARY_YEARLY 
FROM EMPLOYEE e;

--------------------------------------------

-- ** <오늘 날짜 조회> **
SELECT SYSDATE FROM DUAL;

-- SYSDATE 	: 시스템 상의 현재 날짜
-- DUAL (DUmmy tAbLe): 더미 테이블(임시 테이블, 단순 조회 테이블)

-- * DB는 날짜 데이터의 연산(+,-)이 가능하다 (일 단위) *

SELECT SYSDATE, SYSDATE +1, SYSDATE -1 FROM DUAL;

-- EMPLOYEE 테이블에서 이름, 입사일, 오늘까지 근무한 날짜 조회
SELECT EMP_NAME, HIRE_DATE, (SYSDATE-HIRE_DATE) FROM EMPLOYEE e ;

------------------------------------------------------

-- <컬럼 별칭 지정>

-- SELECT 조회 결과의 집합인 RESULT SET에 컬럼명을 지정

/* 1) 컬럼명 AS 별칭	: 띄어쓰기X, 특수문자X, 문자O
 * 2) 컬럼명 별칭		: 1)번에서 AS만 생략한 것
 * 
 * 3) 컬럼명 AS "별칭"	: 띄어쓰기O, 특수문자O, 문자O
 * 4) 컬럼명 "별칭" 	: 3)번에서 AS만 생략한 것
 * */

-- EMPLOYEE 테이블에서
-- 사번, 이름, 급여(원), 근무 일수를 모두 조회
SELECT 	EMP_ID AS 사번, 
		EMP_NAME 이름, 
		SALARY AS "급여(원)",
		(SYSDATE - HIRE_DATE) "근무 일수" 
FROM EMPLOYEE e ;
		
-------------------------------------------

-- 리터럴 : 값 자체

-- DB에서의 리터럴 : 임의로 지정한 값을 기존 테이블에 존재하는 값 처럼 사용
--> 리터럴 표기법 : ''(홑따옴표)

SELECT EMP_NAME, SALARY, '원' 단위
FROM EMPLOYEE ;

--------------------------------------------

-- DISTINCT : 조회 시 컬럼에 포함된 중복 값을 한 번만 표시할 때 사용

-- * 주의사항 *
-- 1) DISTINCT 는 SELECT문에 딱 한번만 작성할 수 있다.
-- 2) DISTINCT는 SELECT문 가장 앞에 작성 되어야 한다. 

-- EMPLOYEE 테이블에 저장된 직원들이 속해있는 부서 코드 종류 조회
SELECT DISTINCT DEPT_CODE FROM EMPLOYEE e ;

--------------------------------------------
-- WHERE절 
--> 테이블에서 조건을 충족하는 값을 가진 행만 조회하고자 할 때 사용

-- 비교 연산자 : >, <, >=, <=, = (같다), != (같지 않다), <> (같지 않다)

-- EMPLOYEE 테이블에서 급여가 3백만원 초과인 직원의
-- 사번, 이름, 급여, 부서코드를 조회
/* 해석 순서 */

/*3*/SELECT EMP_ID, EMP_NAME, SALARY, DEPT_CODE 
/*1*/FROM EMPLOYEE 
/*2*/WHERE SALARY > 3000000;

-- EMPLOYEE 테이블에서
-- 부서코드가 'D9'인 직원의
-- 사번, 이름, 부서코드, 전화번호 조회
