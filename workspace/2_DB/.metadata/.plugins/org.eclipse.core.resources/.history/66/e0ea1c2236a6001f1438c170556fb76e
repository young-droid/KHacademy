-- 함수 : 컬럼의 값을 읽어서 연산한 결과를 반환

-- 단일행(SINGLE ROW) 함수 : N개의 값을 읽어 N개의 결과 반환

-- 그룹(GROUP) 함수 : N개의 값을 읽어 1개의 결과 반환

-- 함수는 SELECT절, WHERE절, ORDER BY절,
-- 		GROUP BY절, HAVING절에서도 사용 가능

/********* 단일행 함수 **********/

-- <문자열 관련 함수>

-- LENGTH(문자열|컬럼명) : 문자열의 길이 반환
SELECT 'HELLO WORLD', LENGTH('HELLO WORLD') FROM DUAL;

-- EMPLOYEE 테이블에서
-- 사원명, 이메일, 이메일 길이 조회
-- 단, 이메일 길이가 12 이하인 행만
-- 이메일 길이 오름차순 조회

SELECT EMP_NAME , EMAIL , LENGTH(EMAIL) "이메일 길이"
FROM EMPLOYEE 
WHERE LENGTH(EMAIL) <= 12
ORDER BY "이메일 길이";

-----------------------------------------------------
-- INSTR(문자열 | 컬럼명, '찾을 문자열' [, 찾을 시작 위치 [, 순번]])
-- 지정한 위치부터 지정한 순번째로 검색되는 문자의 시작 위치를 반환

-- 문자열에서 맨 앞에 있는 'B'의 위치를 조회
SELECT 'AABAACAABBAA', INSTR('AABAACAABBAA','B')
FROM DUAL;

-- 문자열 검색을 5번부터 시작해서, 처음 나오는 'B'의 위치를 조회
SELECT 'AABAACAABBAA', INSTR('AABAACAABBAA','B', 5)
FROM DUAL;

-- 문자열 검색을 5번부터 시작해서, 두번째 나오는 'B'의 위치를 조회
SELECT 'AABAACAABBAA', INSTR('AABAACAABBAA','B', 5, 2)
FROM DUAL;

--------------------------------------------------------

-- SUBSTR(문자열 | 컬럼명, 시작위치 [,길이])
-- 문자열을 시작 위치부터 지정된 길이 만큼 잘라내서 반환
-- 길이 미작성 시 시작 위치 부터 끝까지 잘라내서 반환

-- EMPLOYEE 테이블에서
-- 사원명, 이메일 아이디(@ 앞에 까지의 문자열)을
-- 이메일 아이디 오름차순으로 조회

SELECT EMP_NAME, EMAIL, SUBSTR(EMAIL, 1, INSTR(EMAIL,'@')-1) EMAIL_ID
FROM EMPLOYEE 
ORDER BY EMAIL_ID;

--------------------------------------------------------

-- TRIM([옵션] '문자열' | 컬럼명 [FROM '문자열' | 컬럼명])
-- 주어진 컬럼이나 문자열의 앞, 뒤, 양쪽에 있는 지정된 문자를 제거

-- [옵션] : LEADING(앞쪽), TRAILING(뒤쪽), BOTH(양쪽, *기본값*)
 
SELECT '       K  H    ', TRIM('       K  H    ') FROM DUAL;
						-- 양쪽 공백 제거(중간 미포함)
SELECT '---KH----', TRIM('-' FROM '---KH----') FROM DUAL;
SELECT '---KH----', TRIM(LEADING '-' FROM '---KH----') FROM DUAL;
SELECT '---KH----', TRIM(TRAILING '-' FROM '---KH----') FROM DUAL;


--------------------------------------------------------

/* 숫자 관련 함수 */

-- ABS(숫자 | 컬럼명) : 절대값
SELECT ABS(10), ABS(-10) FROM DUAL;

-- MOD(숫자 | 컬럼명, 숫자 | 컬럼명) : 나머지 값 반환

-- EMPLOYEE 테이블에서 사원의 월급을 100만으로 나눴을 때 나머지 조회
SELECT EMP_NAME , SALARY , MOD(SALARY, 1000000)
FROM EMPLOYEE;


-- ROUND(숫자  컬럼명 [, 소수점 위치]) : 반올림

SELECT 123.456, ROUND(123.456) FROM DUAL;  -- 소수점 첫째 자리에서 반올림
SELECT 123.456, ROUND(123.456, 1) FROM DUAL;  -- 소수점 첫째 자리까지 출력
SELECT 123.456, ROUND(123.456, 2) FROM DUAL;  -- 소수점 둘째 자리까지 출력

SELECT 123.456, ROUND(123.456, 0) FROM DUAL;  -- 소수점 첫째 자리에서 반올림
SELECT 123.456, ROUND(123.456, -1) FROM DUAL;  -- 소수점 0번째 자리에서 반올림
SELECT 123.456, ROUND(123.456, -2) FROM DUAL;  -- 소수점 -1번째 자리에서 반올림


-- CEIL(숫자 | 컬럼명) : 무조건 반올림
-- FLOOR(숫자 | 컬럼명) : 무조건 내림
--> 둘 다 소수점 첫째 자리에서 올림/내림 처리
SELECT 123.5, CEIL(123.5), FLOOR(123.5) FROM DUAL;

-- TRUNC(숫자 | 컬럼명 [,위치]) : 특정 위치 아래를 버림(절삭)

SELECT TRUNC(123.456,1), TRUNC(123.456,-1) FROM DUAL;

-- 버림, 내림 차이점 (TURNC 와 FLOOR)
SELECT  TRUNC(-123.5), FLOOR(-123.5) FROM DUAL;
--> 음수 사용 시 차이가 보임

----------------------------------------------------
/* 날짜(DATE) 관련 함수 */

-- SYSDATE : 시스템에 현재 시간(년,월,일,시,분,초)을 반환
SELECT SYSDATE FROM DUAL;

-- SYSTIMESTAMP : SYSDATE + MS 단위 추가
SELECT SYSTIMESTAMP FROM DUAL;

-- MONTHS_BETWEEN(날짜, 날짜) : 두 날짜의 개월 수 차이를 반환
SELECT ROUND(MONTHS_BETWEEN(SYSDATE, '2024/10/16')) || '개월' AS 수강기간 FROM DUAL;

-- EMPLOYEE 테이블에서
-- 사원의 이름, 입사일, 근무 개월 수, 근무 년차 조회
SELECT EMP_NAME , HIRE_DATE , ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) || '개월' AS "근무 개월 수" , ROUND((SYSDATE - HIRE_DATE)/365)
FROM EMPLOYEE;



















